    def _get_stringrules(self, *rulefiles):
        """Parse YAML rule file(s).

        Args:
            *rulefiles: list of rule files.

        Returns:
            rules_raw: list of unvalidated rule items, each of which a list.

        Raises:
            FileNotFoundError: if a rule file is not accessible.
        """
    def _instantiate_splitrules_as_ruleobjects(self):
        """Returns list of rule objects.

        Validates each splitrule and creates rule objects from splitrules
        (after validation).

        Raises:
        """
    def _rule_sources_have_precedents(self):
        """Verifies that each "source" has been previously initialized.

        Returns:
            True

        Raises:
            SourceNotPrecedentedError: if any "source" not initialized.
        """
    def _validate_rules(self):
        """Validates list of rule objects.

        Calls Rule class to validate each rule.

        Returns:
            self.rules: validated and lightly corrected list of rule objects.
        """
